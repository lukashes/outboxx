name: PR Quality Gates

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:

  pr-checks:
    name: Integration & Coverage
    runs-on: ubuntu-latest

    if: github.event.pull_request.draft == false

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: outboxx_test
          # Enable logical replication (sync with dev/postgres.conf)
          POSTGRES_INITDB_ARGS: "-c wal_level=logical -c max_replication_slots=10 -c max_wal_senders=10 -c max_logical_replication_workers=4"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      kafka:
        image: bitnami/kafka:latest
        env:
          KAFKA_CFG_NODE_ID: 1
          KAFKA_CFG_PROCESS_ROLES: broker,controller
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:19093
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:19093
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_KRAFT_CLUSTER_ID: test-cluster-id
          ALLOW_PLAINTEXT_LISTENER: "yes"
          # Auto-create topics for CDC (sync with docker-compose.yml)
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
          KAFKA_CFG_NUM_PARTITIONS: 3
          KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd "kafka-topics.sh --bootstrap-server localhost:9092 --list"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
        ports:
          - 9092:9092

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27

      # Integration Tests
      - name: Setup PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Initialize database
        run: |
          PGPASSWORD=password psql -h localhost -p 5432 -U postgres -d outboxx_test -f dev/postgres-init.sql

      - name: Wait for Kafka
        run: |
          echo "Waiting for Kafka to be ready..."
          timeout 60s bash -c 'until nc -z localhost 9092; do sleep 1; done'
          echo "Kafka is ready!"

      - name: Run integration tests
        run: make nix-test-integration
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: outboxx_test
          KAFKA_BROKERS: localhost:9092

      # Code Coverage
      - name: Generate coverage report
        run: make nix-coverage