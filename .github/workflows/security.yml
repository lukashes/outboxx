name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly security scan on Mondays at 2 AM

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Nix
        uses: cachix/install-nix-action@v31

      - name: Run Zig static analysis
        run: |
          # Zig has built-in static analysis and compile-time checks
          nix develop --command zig build --summary all -Doptimize=Debug
          echo "PASS: Zig static analysis completed"

          # Additional compile-time safety checks
          echo "Running additional safety checks..."
          nix develop --command zig build test --summary all
          echo "PASS: Compile-time safety checks completed"

      - name: Check for unsafe patterns
        run: |
          echo "Scanning for potentially unsafe patterns in Zig code..."

          # Check for direct memory access patterns
          if grep -r "@intFromPtr\|@ptrFromInt" src/ --include="*.zig"; then
            echo "WARN: Found pointer-integer conversions - review for safety"
          fi

          # Check for unchecked allocations
          if grep -r "\.alloc(" src/ --include="*.zig" | grep -v "defer\|catch"; then
            echo "WARN: Found allocations without visible error handling"
          fi

          echo "PASS: Unsafe pattern scan completed"

  secret-scanning:
    name: Secret Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for secret scanning

      - name: Run secret detection
        run: |
          # Check for common secret patterns
          echo "Scanning for potential secrets..."

          # Database credentials (exclude test configs, format strings and default values)
          if grep -r -i "password.*=" src/ --include="*.zig" | grep -v "_test" | grep -v "// " | grep -v "password.*=.*\"password\"" | grep -v "\.password.*=.*\"password\"" | grep -v "password={s}"; then
            echo "FAIL: Found potential hardcoded passwords"
            exit 1
          fi

          # API keys and tokens
          if grep -r -E "(api_key|apikey|token|secret).*=" src/ --include="*.zig" | grep -v "_test" | grep -v "// "; then
            echo "FAIL: Found potential API keys or tokens"
            exit 1
          fi

          # Connection strings
          if grep -r -E "postgres://|kafka://|mongodb://" src/ --include="*.zig" | grep -v "_test" | grep -v "// "; then
            echo "FAIL: Found potential hardcoded connection strings"
            exit 1
          fi

          # Private keys
          if grep -r -E "PRIVATE KEY|BEGIN RSA|BEGIN DSA" src/ --include="*.zig"; then
            echo "FAIL: Found potential private keys"
            exit 1
          fi

          echo "PASS: No hardcoded secrets detected"


