version: '3.8'

services:
  # PostgreSQL with logical replication enabled for CDC testing
  postgres:
    image: postgres:17
    container_name: outboxx-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: outboxx_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dev/postgres-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./dev/postgres.conf:/etc/postgresql/postgresql.conf
      - ./dev/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c listen_addresses='*'
      -c log_statement=all
      -c log_min_messages=info
    networks:
      - outboxx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d outboxx_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kafka broker with KRaft mode (no ZooKeeper needed)
  kafka:
    image: bitnami/kafka:latest
    container_name: outboxx-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      # KRaft mode configuration
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:19093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:19093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      ALLOW_PLAINTEXT_LISTENER: "yes"
      # Auto-create topics for CDC
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
    networks:
      - outboxx-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  postgres_data:
    name: outboxx_postgres_data
  kafka_data:
    name: outboxx_kafka_data

networks:
  outboxx-network:
    driver: bridge
    name: outboxx-network